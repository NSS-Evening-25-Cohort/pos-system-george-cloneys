To extract information from an array of objects in JavaScript, you can use the `map()` method. This method creates a new array with the results of calling a provided function on every element in the original array.

Here's an example of how you can use the `map()` method to extract information from an array of objects and return the information needed to show on a revenue page:

```
const orders = [
  { name: 'Product 1', Total(including tip): 10.99, Date: 2/12, Payment Type: Cash, Tip Amoun: $3, Order Type },
  { name: 'Product 2', Total(including tip): 5.99, Date: 2/12, Payment Type: Cash, Tip Amoun: $3, Order Type },
  { name: 'Product 3', Total(including tip): 8.99, Date: 3/12, Payment Type: Cash, Tip Amoun: $3, Order Type }
]

const revenueData = orders.map(product => {
  const totalPrice = product.price * product.quantity
  return { name: product.name, price: product.price, quantity: product.quantity, totalPrice }
})

console.log(revenueData)
```

In this example, we have an array of objects called `orders`. Each object represents a product with its name, price, and quantity. We want to extract this information and calculate the total price for each product. Then we want to return the name, price, quantity, and total price for each product in a new array called `revenueData`.

We use the `map()` method to iterate over each product object in the `orders` array. For each product, we calculate the total price by multiplying the price by the quantity. Then we create a new object with the name, price, quantity, and total price properties and return it. The `map()` method creates a new array with these objects and assigns it to the `revenueData` variable.

Finally, we log the `revenueData` array to the console to see the result. This array contains the information we need to show on a revenue page, including the total price for each product.